use user01;
show databases;

-- NOTICE
CREATE TABLE `NOTICE` (
	`BOARD_NUM`	BIGINT	NOT NULL,
	`BOARD_TITLE`	VARCHAR(255)	NULL,
	`BOARD_CONTENTS`	LONGTEXT	NULL,
	`BOARD_WRITER`	VARCHAR(255)	NULL,
	`BOARD_DATE`	DATETIME	NULL,
	`BOARD_HIT`	BIGINT	NULL
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

ALTER TABLE `NOTICE` ADD CONSTRAINT `PK_NOTICE` PRIMARY KEY (
	`BOARD_NUM`
);

ALTER TABLE `NOTICE` MODIFY `BOARD_NUM` BIGINT NOT NULL AUTO_INCREMENT;

-- PRODUCTS_KIND
CREATE TABLE `PRODUCTS_KIND` (
	`KIND_NUM`	BIGINT	NOT NULL,
	`KIND_NAME`	VARCHAR(255)	NULL
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

ALTER TABLE `PRODUCTS_KIND` ADD CONSTRAINT `PK_PRODUCTS_KIND` PRIMARY KEY (
	`KIND_NUM`
);

ALTER TABLE `PRODUCTS_KIND` MODIFY `KIND_NUM` BIGINT NOT NULL AUTO_INCREMENT;

INSERT INTO PRODUCTS_KIND (KIND_NAME) VALUES('예금');
INSERT INTO PRODUCTS_KIND (KIND_NAME) VALUES('적금');
INSERT INTO PRODUCTS_KIND (KIND_NAME) VALUES('대출');

-- PRODUCTS
CREATE TABLE `PRODUCTS` (
	`PRODUCT_NUM`	BIGINT	NOT NULL,
	`PRODUCT_NAME`	VARCHAR(255)	NULL,
	`PRODUCT_CONTENTS`	LONGTEXT	NULL,
	`PRODUCT_DATE`	DATETIME	NULL,
	`PRODUCT_RATE`	DECIMAL(4,2)	NULL,
	`KIND_NUM`	BIGINT	NOT NULL,
    FOREIGN KEY (`KIND_NUM`) references `PRODUCTS_KIND`(`KIND_NUM`)
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

ALTER TABLE `PRODUCTS` ADD CONSTRAINT `PK_PRODUCTS` PRIMARY KEY (
	`PRODUCT_NUM`
);

ALTER TABLE `PRODUCTS` MODIFY `PRODUCT_NUM` BIGINT NOT NULL AUTO_INCREMENT;

-- SUCCESS
INSERT INTO PRODUCTS
VALUES (NULL, '상품명', '상품내용', '2027-12-31', 1.12, 1);
INSERT INTO PRODUCTS
VALUES (NULL, '상품명2', '상품내용2', '2025-08-04', 1.12, 1);

-- FAIL
INSERT INTO PRODUCTS
VALUES (NULL, '상품명', '상품내용', '2027-12-31', 1.12, 5);

-- TEST
SELECT * FROM PRODUCTS
ORDER BY PRODUCT_NUM DESC;

SELECT * FROM PRODUCTS
WHERE PRODUCT_NUM = 3;

SELECT KIND_NUM FROM PRODUCTS
WHERE PRODUCT_NUM = 2;

SELECT * FROM PRODUCTS_KIND WHERE KIND_NUM = 1;

SELECT KIND_NAME FROM PRODUCTS_KIND 
WHERE KIND_NUM = (SELECT KIND_NUM FROM PRODUCTS WHERE PRODUCT_NUM = 2);

SELECT *
FROM PRODUCTS P
	 INNER JOIN PRODUCTS_KIND PK
     -- ON P.KIND_NUM = PK.KIND_NUM
     USING(KIND_NUM)
WHERE P.PRODUCT_NUM = 2
;

INSERT INTO PRODUCTS (PRODUCT_NAME, PRODUCT_CONTENTS, PRODUCT_DATE, PRODUCT_RATE, KIND_NUM)
VALUES ("상품명", "상품내용", NOW(), 1, 1);

UPDATE PRODUCTS
SET
PRODUCT_NAME = "UPDATE NAME"
,PRODUCT_CONTENTS = "UPDATE CONTENTS"
,PRODUCT_RATE = 1.11
,KIND_NUM = 2
WHERE PRODUCT_NUM = 2;

DELETE FROM PRODUCTS
WHERE PRODUCT_NUM = 2;

-- QNA
CREATE TABLE `QNA` (
	`BOARD_NUM`	BIGINT	NOT NULL,
	`BOARD_TITLE`	VARCHAR(255)	NULL,
	`BOARD_CONTENTS`	LONGTEXT	NULL,
	`BOARD_WRITER`	VARCHAR(255)	NULL,
	`BOARD_DATE`	DATETIME	NULL,
	`BOARD_HIT`	BIGINT	NULL,
    `BOARD_REF`	BIGINT	NULL,
    `BOARD_STEP`	BIGINT	NULL,
    `BOARD_DEPTH`	BIGINT	NULL
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

ALTER TABLE `QNA` ADD CONSTRAINT `PK_QNA` PRIMARY KEY (
	`BOARD_NUM`
);

ALTER TABLE `QNA` MODIFY `BOARD_NUM` BIGINT NOT NULL AUTO_INCREMENT;

INSERT INTO QNA 
(BOARD_TITLE, BOARD_CONTENTS, BOARD_WRITER, BOARD_DATE, BOARD_HIT, 
BOARD_REF, BOARD_STEP, BOARD_DEPTH)
VALUES
('T1', 'CONTENTS', 'WRITER', NOW(), 0,
1, 0, 0);
INSERT INTO QNA 
(BOARD_TITLE, BOARD_CONTENTS, BOARD_WRITER, BOARD_DATE, BOARD_HIT, 
BOARD_REF, BOARD_STEP, BOARD_DEPTH)
VALUES
('T2', 'CONTENTS', 'WRITER', NOW(), 0,
2,	0,	0);
INSERT INTO QNA 
(BOARD_TITLE, BOARD_CONTENTS, BOARD_WRITER, BOARD_DATE, BOARD_HIT, 
BOARD_REF, BOARD_STEP, BOARD_DEPTH)
VALUES
('T1_1', 'CONTENTS', 'WRITER', NOW(), 0,
1,	3,	1);

INSERT INTO QNA 
(BOARD_TITLE, BOARD_CONTENTS, BOARD_WRITER, BOARD_DATE, BOARD_HIT, 
BOARD_REF, BOARD_STEP, BOARD_DEPTH)
VALUES
('T1_2', 'CONTENTS', 'WRITER', NOW(), 0,
1,	1,	1);
INSERT INTO QNA 
(BOARD_TITLE, BOARD_CONTENTS, BOARD_WRITER, BOARD_DATE, BOARD_HIT, 
BOARD_REF, BOARD_STEP, BOARD_DEPTH)
VALUES
('T1_1_1', 'CONTENTS', 'WRITER', NOW(), 0,
1,	4,	2);
INSERT INTO QNA 
(BOARD_TITLE, BOARD_CONTENTS, BOARD_WRITER, BOARD_DATE, BOARD_HIT, 
BOARD_REF, BOARD_STEP, BOARD_DEPTH)
VALUES
('T2_1', 'CONTENTS', 'WRITER', NOW(), 0,
2,	1,	1);
INSERT INTO QNA 
(BOARD_TITLE, BOARD_CONTENTS, BOARD_WRITER, BOARD_DATE, BOARD_HIT, 
BOARD_REF, BOARD_STEP, BOARD_DEPTH)
VALUES
('T1_2_1', 'CONTENTS', 'WRITER', NOW(), 0,
1,	2,	2);

SELECT * FROM QNA
ORDER BY BOARD_REF DESC, BOARD_STEP ASC;

-- updateChildren: ref가 부모의 ref와 같고, step이 부모의 step보다 큰 것들을 1씩 증가

-- insertChildren: 
INSERT INTO QNA (BOARD_TITLE, BOARD_CONTENTS, BOARD_WRITER, BOARD_DATE, BOARD_HIT, 
BOARD_REF, BOARD_STEP, BOARD_DEPTH)
VALUES ();



