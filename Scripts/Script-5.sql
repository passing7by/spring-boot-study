use user01;
show databases;


-- 테이블 생성
-- NOTICE
CREATE TABLE `NOTICE` (
	`BOARD_NUM`	BIGINT	NOT NULL,
	`BOARD_TITLE`	VARCHAR(255)	NULL,
	`BOARD_CONTENTS`	LONGTEXT	NULL,
	`BOARD_WRITER`	VARCHAR(255)	NULL,
	`BOARD_DATE`	DATETIME	NULL,
	`BOARD_HIT`	BIGINT	NULL
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

ALTER TABLE `NOTICE` ADD CONSTRAINT `PK_NOTICE` PRIMARY KEY (
	`BOARD_NUM`
);

ALTER TABLE `NOTICE` MODIFY `BOARD_NUM` BIGINT NOT NULL AUTO_INCREMENT;

-- PRODUCTS_KIND
CREATE TABLE `PRODUCTS_KIND` (
	`KIND_NUM`	BIGINT	NOT NULL,
	`KIND_NAME`	VARCHAR(255)	NULL
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

ALTER TABLE `PRODUCTS_KIND` ADD CONSTRAINT `PK_PRODUCTS_KIND` PRIMARY KEY (
	`KIND_NUM`
);

ALTER TABLE `PRODUCTS_KIND` MODIFY `KIND_NUM` BIGINT NOT NULL AUTO_INCREMENT;

-- PRODUCTS
CREATE TABLE `PRODUCTS` (
	`PRODUCT_NUM`	BIGINT	NOT NULL,
	`PRODUCT_NAME`	VARCHAR(255)	NULL,
	`PRODUCT_CONTENTS`	LONGTEXT	NULL,
	`PRODUCT_DATE`	DATETIME	NULL,
	`PRODUCT_RATE`	DECIMAL(4,2)	NULL,
	`KIND_NUM`	BIGINT	NOT NULL,
    FOREIGN KEY (`KIND_NUM`) references `PRODUCTS_KIND`(`KIND_NUM`)
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

ALTER TABLE `PRODUCTS` ADD CONSTRAINT `PK_PRODUCTS` PRIMARY KEY (
	`PRODUCT_NUM`
);

ALTER TABLE `PRODUCTS` MODIFY `PRODUCT_NUM` BIGINT NOT NULL AUTO_INCREMENT;

-- QNA
CREATE TABLE `QNA` (
	`BOARD_NUM`	BIGINT	NOT NULL,
	`BOARD_TITLE`	VARCHAR(255)	NULL,
	`BOARD_CONTENTS`	LONGTEXT	NULL,
	`BOARD_WRITER`	VARCHAR(255)	NULL,
	`BOARD_DATE`	DATETIME	NULL,
	`BOARD_HIT`	BIGINT	NULL,
    `BOARD_REF`	BIGINT	NULL,
    `BOARD_STEP`	BIGINT	NULL,
    `BOARD_DEPTH`	BIGINT	NULL
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

ALTER TABLE `QNA` ADD CONSTRAINT `PK_QNA` PRIMARY KEY (
	`BOARD_NUM`
);

ALTER TABLE `QNA` MODIFY `BOARD_NUM` BIGINT NOT NULL AUTO_INCREMENT;

-- NOTICEFILES
CREATE TABLE `NOTICEFILES` (
	`FILE_NUM`	BIGINT	NOT NULL,
	`ORI_NAME`	VARCHAR(255)	NULL,
	`SAVE_NAME`	VARCHAR(255)	NULL,
	`BOARD_NUM`	BIGINT	NOT NULL
);

ALTER TABLE `NOTICEFILES` ADD CONSTRAINT `PK_NOTICEFILES` PRIMARY KEY (
	`FILE_NUM`
);

ALTER TABLE `NOTICEFILES` MODIFY `FILE_NUM` BIGINT NOT NULL AUTO_INCREMENT;

ALTER TABLE NOTICEFILES
ADD CONSTRAINT FK_NOTICE FOREIGN KEY (BOARD_NUM) REFERENCES NOTICE (BOARD_NUM);

-- QNAFILES
CREATE TABLE `QNAFILES` (
	`FILE_NUM`	BIGINT	NOT NULL,
	`ORI_NAME`	VARCHAR(255)	NULL,
	`SAVE_NAME`	VARCHAR(255)	NULL,
	`BOARD_NUM`	BIGINT	NOT NULL
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

ALTER TABLE `QNAFILES` ADD CONSTRAINT `PK_QNAFILES` PRIMARY KEY (
	`FILE_NUM`
);

ALTER TABLE `QNAFILES` MODIFY `FILE_NUM` BIGINT NOT NULL AUTO_INCREMENT;

ALTER TABLE QNAFILES
ADD CONSTRAINT FK_QNAFILES FOREIGN KEY (BOARD_NUM) REFERENCES QNA (BOARD_NUM);

-- MEMBERS
CREATE TABLE `MEMBERS` (
	`USERNAME`	VARCHAR(255)	NOT NULL,
	`PASSWORD`	VARCHAR(255)	NULL,
	`NAME`	VARCHAR(255)	NULL,
	`EMAIL`	VARCHAR(255)	NULL,
	`PHONE`	VARCHAR(255)	NULL,
	`BIRTH`	DATE	NULL
);

ALTER TABLE `MEMBERS` ADD CONSTRAINT `PK_MEMBERS` PRIMARY KEY (
	`USERNAME`
);

ALTER TABLE `MEMBERS` ADD COLUMN `ACCOUNT_NON_EXPIRED` BIT;
ALTER TABLE `MEMBERS` ADD COLUMN `ACCOUNT_NON_LOCKED` BIT;
ALTER TABLE `MEMBERS` ADD COLUMN `CREDENTIALS_NON_EXPIRED` BIT;
ALTER TABLE `MEMBERS` ADD COLUMN `ENABLED` BIT;

-- PROFILE
CREATE TABLE `PROFILE` (
	`USERNAME`	VARCHAR(255)	NOT NULL,
	`SAVE_NAME`	VARCHAR(255)	NULL,
	`ORI_NAME`	VARCHAR(255)	NULL
);

ALTER TABLE `PROFILE` ADD CONSTRAINT `PK_USERNAME` PRIMARY KEY (
	`USERNAME`
);

ALTER TABLE `PROFILE`
ADD CONSTRAINT `FK_PROFILE` FOREIGN KEY (`USERNAME`) REFERENCES `MEMBERS` (`USERNAME`);

-- ROLE
CREATE TABLE `ROLE` (
	`ROLE_NUM`	BIGINT	NOT NULL,
	`ROLE_NAME`	VARCHAR(255)	NULL
);

ALTER TABLE `ROLE` ADD CONSTRAINT `PK_ROLE` PRIMARY KEY (
	`ROLE_NUM`
);

ALTER TABLE `ROLE` MODIFY `ROLE_NUM` BIGINT NOT NULL AUTO_INCREMENT;

-- MEMBER_ROLE
CREATE TABLE `MEMBER_ROLE` (
	`USERNAME`	VARCHAR(255)	NOT NULL,
	`ROLE_NUM`	BIGINT	NOT NULL
);

ALTER TABLE `MEMBER_ROLE`
ADD CONSTRAINT `FK_MEMBER_ROLE1` FOREIGN KEY (`USERNAME`) REFERENCES `MEMBERS` (`USERNAME`);
ALTER TABLE `MEMBER_ROLE`
ADD CONSTRAINT `FK_MEMBER_ROLE2` FOREIGN KEY (`ROLE_NUM`) REFERENCES `ROLE` (`ROLE_NUM`);

-- CART
CREATE TABLE `CART` (
	`USERNAME`	VARCHAR(255)	NOT NULL,
	`PRODUCT_NUM`	BIGINT	NOT NULL
);

ALTER TABLE `CART`
ADD CONSTRAINT `FK_CART1` FOREIGN KEY (`USERNAME`) REFERENCES `MEMBERS` (`USERNAME`);
ALTER TABLE `CART`
ADD CONSTRAINT `FK_CART2` FOREIGN KEY (`PRODUCT_NUM`) REFERENCES `PRODUCTS` (`PRODUCT_NUM`);

-- 생성된 테이블 목록 확인
SHOW TABLES;

-- 테이블명 변경
-- 대문자 -> 소문자
ALTER TABLE NOTICE RENAME notice;
ALTER TABLE NOTICEFILES RENAME noticefiles;
ALTER TABLE PRODUCTS  RENAME products;
ALTER TABLE PRODUCTS_KIND RENAME products_kind;
ALTER TABLE QNA RENAME qna;
ALTER TABLE QNAFILES RENAME qnafiles;

-- 소문자 -> 대문자
ALTER TABLE notice RENAME NOTICE;
ALTER TABLE noticefiles RENAME NOTICEFILES;
ALTER TABLE products  RENAME PRODUCTS;
ALTER TABLE products_kind RENAME PRODUCTS_KIND;
ALTER TABLE qna RENAME QNA;
ALTER TABLE qnafiles RENAME QNAFILES;


-- test
INSERT INTO MEMBERS
VALUES ('jinam', 'jinam', '김지남', 'jinam@naver.com', '010-0000-0000', '1998-11-11');

SELECT *
FROM MEMBERS M
LEFT JOIN PROFILE P USING(USERNAME)
LEFT JOIN MEMBER_ROLE MR USING(USERNAME)
LEFT JOIN ROLE R USING(ROLE_NUM)
WHERE
	USERNAME = 'new'
	AND PASSWORD = 'new';
    
SELECT p.*
FROM members m
JOIN cart c USING (username)
JOIN products p USING (product_num)
WHERE username='new';

-- MEMBERS 테이블에 컬럼 추가 후, 기존 데이터에 값 업데이트
set SQL_SAFE_UPDATES = 0;
UPDATE `MEMBERS`
SET ACCOUNT_NON_EXPIRED = 1
    ,ACCOUNT_NON_LOCKED = 1
    ,CREDENTIALS_NON_EXPIRED = 1
    ,ENABLED = 1
WHERE USERNAME = USERNAME;
set SQL_SAFE_UPDATES = 1;

SELECT * FROM MEMBERS;

-- ROLE 테이블에 값 세팅
-- ROLE_ADMIN
-- ROLE_MANAGER
-- ROLE_MEMBER
INSERT INTO ROLE VALUES(NULL, 'ROLE_ADMIN');
INSERT INTO ROLE VALUES(NULL, 'ROLE_MANAGER');
INSERT INTO ROLE VALUES(NULL, 'ROLE_MEMBER');

SELECT * FROM ROLE;

-- Admin 계정 지정
INSERT INTO MEMBER_ROLE VALUES ('new', 2);
INSERT INTO MEMBER_ROLE VALUES ('new', 1);